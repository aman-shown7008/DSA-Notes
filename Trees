Q. What is Binary Trees?And its properties.
A binary tree is a tree data structure in which each parent node can have at most two children. Each node of a binary tree consists of three items:
data item
address of left child
address of right child

Terminologies in Binary Tree in Data Structure
1. Nodes – Nodes are the building blocks of any data structure. They majorly contain some data and link to the next/previous nodes. In the case of binary trees, they contain the address of the left and the right child respectively.
2. Root – The topmost node in a tree is known as the root node. A tree can have at most one root node.
3. Parent Node – A node (except the root) that has a succeeding node is known as a parent node.
4. Child Node – A node that has a preceding node is known as a child node. A node can be both parent and child depending on the node that is in context.
5. Leaf Node – A node with no children.
6. Internal Node – A node that has at least one child node is known as an internal node.
7. Depth of a Binary Tree – The number of edges from a node in the tree to the root node.
8. Height of a Binary Tree – The number of edges from the deepest node in the tree to the root node.
<img src="https://i.imgur.com/HOu6ws4.png" alt="Main.png">


Q. What is Binary Search Tree? And use of it.
Binary Search Tree is a node-based binary tree data structure which has the following properties:

The left subtree of a node contains only nodes with keys lesser than the node’s key.
The right subtree of a node contains only nodes with keys greater than the node’s key.
The left and right subtree each must also be a binary search tree.
Ex-             100
              /     \
            80      120
          /   \     /  \
        60    90  110  150

USE - If some collage want to make ADMIN panel and want to put the whole hierachy of collage in that by coding. So at that time we can use Binary Tree.  
             Dean/Principal
           /       |       \
     Mechinal     CS      Electrical 
         |         |          | 
     Teacher     Teacher    Teacher
        |           |         | 
     Student     Student    Student
